services:
  wordpress:
    depends_on:
      - database
    container_name: ${CONTAINER_NAME}-wordpress
    build:
      context: .
      dockerfile: ./wordpress/Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306 # use the same name as database service
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
      WORDPRESS_DB_USER: '${DATABASE_USER}'
      WORDPRESS_DB_PASSWORD: '${DATABASE_PASSWORD}'
    volumes:
      - wordpress:/var/www/html
      - ./src:/var/www/html/wp-content:rw
      - ./wordpress/certs:/etc/ssl/certs:ro
      - ./wordpress/default-ssl.conf:/etc/apache2/sites-available/default-ssl.conf:ro
      - ./wordpress/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
    ports:
      - 443:443
    networks:
      - internal

  database:
    container_name: ${CONTAINER_NAME}-database
    image: mariadb:lts
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - internal

  phpmyadmin:
    container_name: ${CONTAINER_NAME}-phpmyadmin
    image: phpmyadmin:latest
    env_file: .env
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
    ports:
      - "8080:80"
    networks:
      - internal


volumes:
  dbdata:
  wordpress:

networks:
  internal:
    driver: bridge